<?xml version="1.0" encoding="UTF-8"?>
<!-- *****************************************************************
 *** Copyright (c) 2001, System/Technology Development Corporation .
 ***                
 *** Filename:      remosProbes.xsd
 *** Version:       1.0
 *** Description:   Schema used by the various Remos Probes
 ***                
 *** Author:        Amarendranath Vadlamudi <amar.vadlamudi@stdc.com>
 *** Created at:    Mon Nov  5 10:44:11 2001
 *** Modified by:   Amarendranath Vadlamudi <amar.vadlamudi@stdc.com>
 *** Modified at:   Mon Nov  5 10:46:29 2001
 *** Status:        Experimental, do not distribute.
 *** Update count:  4
 ***************************************************************** -->

  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://www.stdc.com/2001/QMS/Probes/RemosProbes"
    targetNamespace="http://www.stdc.com/2001/QMS/Probes/RemosProbes"
    elementFormDefault="qualified"
    version="$Id: remosProbes.xsd,v 1.3 2001/11/26 22:23:26 nath Exp $">
  
  <xsd:complexType name="requestType">
    <xsd:annotation>
      <xsd:documentation>Defining a template for requests that have a
	list of hosts. The hostname datatype may later be changed to a
	type that lists IPv4 addresses for stronger data typing.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="hostname" type="xsd:string"
	maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:complexType>        
  
  <xsd:complexType name="flowType">
    <xsd:annotation>
      <xsd:documentation>Defining the Flow request type as supported by
	the Remos probe. It requires that a minimum of two host names be
	provided to ensure that a flow can be calculated between
	them. For multiple hostnames, the probe provides all the
	possible combinations of flows.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="requestType">
	<xsd:sequence>
          <xsd:element name="hostname" type="xsd:string" minOccurs="2"
	    maxOccurs="unbounded"/>
	</xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  
  <xsd:complexType name="linkType">
    <xsd:annotation>
      <xsd:documentation>Defining the more generic Link request as
	supported by the Remos probe. It requires a minimum of one
	hostname. The probe provides bandwidth data for the link between
	each hostname and the virtual switch in the logical topology
	graph as generated by Remos.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="requestType">
	<xsd:sequence>
          <xsd:element name="hostname" type="xsd:string" maxOccurs="unbounded"/>
	</xsd:sequence>
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>
  
  <xsd:complexType name="dataType">
    <xsd:annotation>
      <xsd:documentation>Defining the bandwidth data template reported by
	the Remos Probe. It contains a dataID, source, destination,
	available bandwidth, latency and possibly maximum on the
	link. The bandwidth data could be for a flow or for a
	switch-node link. The elements are:
	dataID - Sequence number maintained by the probe for all the
	data it generates.
	source, destination - the hostnames for the two ends of the
	link or flow used for the bandwidth calculation.
	latency - a number generated by Remos. Usually "0.0"
	available - Available bandwidth. Units are always bits per second
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="dataID" type="xsd:nonNegativeInteger"/>
      <xsd:element name="source" type="xsd:string"/>
      <xsd:element name="destination" type="xsd:string"/>
      <xsd:element name="latency" type="xsd:decimal"/>
      <xsd:element name="available" type="xsd:nonNegativeInteger"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="linkDataType">
    <xsd:annotation>
      <xsd:documentation>Link data always has a maximum value on the
	link. It can be constructed as a complexContent extension of 
	dataType. However the Xerces C++ parser does not handle
	extensions of complexTypes. Hence we explicitly include the same
	elements in this data type as well.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="dataID" type="xsd:nonNegativeInteger"/>
      <xsd:element name="source" type="xsd:string"/>
      <xsd:element name="destination" type="xsd:string"/>
      <xsd:element name="latency" type="xsd:decimal"/>
      <xsd:element name="available" type="xsd:nonNegativeInteger"/>
      <xsd:element name="maximum" type="xsd:nonNegativeInteger">
	<xsd:annotation>
	  <xsd:documentation>The maximum static bandwidth for a
	    link. This parameter only exists for the
	    linkDataType. Units are always bits per second.
	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="probeCommand">
    <xsd:annotation>
      <xsd:documentation>The Remos probes support a series of control
      strings that allow the requestor to control the function of the
      probe. The supported actions are "start", "stop", "pause" and
      "resume". Corresponding to these control actions, the probe
      executes the action. Generally, "start" and "stop" actions for a
      probe are mandatory. The "start" action is usually implicit in
      the invocation of the probe itself and does not require an
      explicit mention.
      </xsd:documentation>
    </xsd:annotation>
      <xsd:sequence>
	<xsd:element name="action">
	  <xsd:simpleType>
	    <xsd:restriction base="xsd:string">
	      <xsd:enumeration value="stop"/>
	      <xsd:enumeration value="pause"/>
	      <xsd:enumeration value="resume"/>
	      </xsd:restriction>
	    </xsd:simpleType>
	</xsd:element>
      </xsd:sequence>
  </xsd:complexType>

  <xsd:element name="remosProbe">
    <xsd:complexType>
      <xsd:choice>
	<xsd:element name="bandwidthRequest">
	  <xsd:complexType>
	    <xsd:choice>
	      <xsd:element name="flowRequest" type="flowType"/>
	      <xsd:element name="linkRequest" type="linkType"/>
	      <xsd:element name="probeControl" type="probeCommand"/>
	    </xsd:choice>
	  </xsd:complexType>
	</xsd:element>
	<xsd:element name="bandwidthData" maxOccurs="unbounded">
	  <xsd:annotation>
	    <xsd:documentation>
	      Multiple instances of bandwidthData are possible in one
	      response from the probe.
	    </xsd:documentation>
	  </xsd:annotation>
	  <xsd:complexType>
	    <xsd:choice>
	      <xsd:element name="flowData" type="dataType"/>
	      <xsd:element name="linkData" type="linkDataType"/>
	    </xsd:choice>
	  </xsd:complexType>
	</xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>











